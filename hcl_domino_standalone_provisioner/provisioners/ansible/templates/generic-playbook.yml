---
-
  name: "Provisioning Scripts"
  gather_facts: true
  hosts: all
  vars:
    dns1: 199.103.5.20
    dns2: 208.85.189.20
    dns3: 199.103.7.51
    dns4: 208.85.188.127
    dns5: 1.1.1.1
    dns6: 8.8.8.8
    enable_vbox_guest_editions: false
    enable_snmp: false
    is_bhyve_zone: false
    proxyandport: '66.6.204.103:3128'
    timezone: 'Central Standard Time'
    useproxy: true
    # Windows
    sysprep: true
    verify: true
    # SNMP
    syscontact: 'support@prominic.net'
    syslocation: 'Rantoul'
    validcommunities: 'A55587'
    # NTP
    ntp1server: 'ntp1.prominic.net,0x8'
    ntp2server: 'ntp2.prominic.net,0x8'
  roles:
    - role: startcloud_win_provision
      when: ansible_facts['os_family'] == "Windows" and ansible_architecture != "aarch64"
## Linux Provisioning Roles
    - role: update
      become: yes
      when: ansible_facts['os_family'] != "Windows" and ansible_architecture != "aarch64"
      vars:
        update_hostname: "{{ hostname }}"
    - role: nfs
      become: yes
      when: ansible_facts['os_family'] != "Windows" and ansible_architecture != "aarch64"
      vars:
        nfs_exports: []
        nfs_rpcbind_enabled: true
        nfs_rpcbind_state: started
    - role: ntp
      become: yes
      when: false
      #when: ansible_facts['os_family'] != "Windows" and ansible_architecture != "aarch64"
      vars:
        ntp_area: ""
        ntp_cron_handler_enabled: false
        ntp_enabled: true
        ntp_manage_config: false
        ntp_restrict:
          - "127.0.0.1"
          - "::1"
        ntp_servers:
          - "ntp1.prominic.net iburst"
          - "ntp2.prominic.net iburst"
        ntp_timezone: America/Chicago
        ntp_tinker_panic: false
    - role: guest_additions
      become: yes
      when: enable_vbox_guest_editions and ansible_architecture != "aarch64"
      vars:
        user: "{{ ssh_username }}"
        vmware_install_open_vm_tools: false
    - role: zfs
      become: yes
      vars:
        daily_cron_rtn: 1
        frequent_cron_rtn: 1
        hourly_cron_rtn: 1
        monthly_cron_rtn: 1
        weekly_cron_rtn: 1
      when: false
    - role: motd
      become: yes
      when: ansible_facts['os_family'] != "Windows" and ansible_architecture != "aarch64"
      vars:
        add_footer: false
        add_update: true
        remove_default_config: true
        restore_default_config: false
        sysadmins_email: vagrantup-startcloud@prominic.net
        sysadmins_signature: "STARTCloud Contact Email"
    - role: desktop
      become: yes
      when: enable_desktop == "True" and ansible_distribution == 'Ubuntu' and ansible_architecture != "aarch64"
    - role: snmp
      become: yes
      when: false
      vars:
        snmp_access_adress: "0.0.0.0"
        snmp_additional_packages: []
        snmp_agentadress_adress:
          ipv4: "{{ ansible_default_ipv4.address if ansible_default_ipv4.address is defined else '127.0.0.1' }}"
          ipv6: "{{ ansible_default_ipv6.address if ansible_default_ipv6.address is defined else '::1' }}"
        snmp_agentadress_port:
          ipv4: 161
          ipv6: 161
        snmp_agentadress_protocol:
          ipv4: udp
          ipv6: udp6
        snmp_encryption: snmp_encryption
        snmp_extension_list:
          -
            extend: ".1.3.6.1.4.1.2021.7890.1 distro {{ snmp_extension_scripts }}/distro"
            url: "https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro"
          -
            extend: "osupdate {{ snmp_extension_scripts }}/osupdate"
            url: "https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/osupdate"
        snmp_extension_scripts: /usr/local/lib/snmpd
        snmp_logging_options: ""
        snmp_monitoring_server: "0.0.0.0"
        snmp_password: snmp_password
        snmp_user: snmp
    - role: cleanup
      become: yes
      when: ansible_facts['os_family'] != "Windows" and ansible_architecture != "aarch64"

## Raspberry Pi Roles
    - role: startcloud_hostname
      when: ansible_architecture == "aarch64"
      vars:
        update_hostname: "{{ hostname }}"
    - role: startcloud_dependencies
      when: ansible_architecture == "aarch64"
      vars:
        packages:
          # Deployment
          - ansible
          - apt-transport-https
          - aptitude
          - certbot
          - cloud-init
          - deborphan
          - dkms
          - grub-common
          - grub2-common
          - os-prober
          - zip
          - rsync
          - tmux
          - screen
          - sshpass
          - libsecret-tools
          - authbind
          # Development
          - 2to3
          - build-essential
          - curl
          - dos2unix
          - gcc
          - gettext
          - git
          - haxe
          - make
          - perl
          - python3-pip
          - software-properties-common
          - ubuntu-restricted-extras
          - uuid-dev
          - wget
          - nano
          - vim
          - libxml2-utils
          #Security
          - audispd-plugins
          - ca-certificates
          - auditd
          - easy-rsa
          - ufw
          - gnupg
          # Networking
          - avahi-daemon
          - blueman
          - bluetooth
          - bluez
          - gnome-bluetooth
          - wireless-tools
          - wpasupplicant
          - dnsmasq
          - rfkill
          - pi-bluetooth
          # Management and Diagnostics
          - cockpit
          - htop
          - iftop
          - inetutils-traceroute
          - iotop
          - ncdu
          - net-tools
          - lm-sensors
          - lsb-release
          - mailutils
          - tcptrack
          - telnet
          - openssh-server
          # Raspberry Pi
          - pibootctl
          - i2c-tools
          - linux-modules-extra-raspi
          - python3-smbus
          - python3-lgpio
          - raspi-config
    - role: startcloud_snapd
      when: ansible_architecture == "aarch64"
      vars:
        snapd_purge: true
        snapd_state: stopped
        snapd_enabled: false
        snapd_block_later_installation: true
        snapd_services:
          - snapd.service
        snapd_files:
          - /etc/apt/apt.conf.d/20snapd.conf
        snapd_block_packages: []
    - role: startcloud_ntp
      when: ansible_architecture == "aarch64"
      vars:
        ntp_area: ""
        ntp_cron_handler_enabled: false
        ntp_enabled: false
        ntp_manage_config: true
        ntp_restrict:
          - "127.0.0.1"
          - "::1"
        ntp_servers:
          - ntp1.prominic.net iburst
          - ntp2.prominic.net iburst
        ntp_timezone: America/Chicago
        ntp_tinker_panic: false
    - role: startcloud_service_user
      when: ansible_architecture == "aarch64"
    - role: startcloud_nfs
      when: ansible_architecture == "aarch64"
      vars:
        nfs_exports: []
    - role: startcloud_desktop
      when: ansible_architecture == "aarch64"
    - role: startcloud_conky
      when: ansible_architecture == "aarch64"
    - role: startcloud_firefox
      when: ansible_architecture == "aarch64"
    - role: startcloud_softphone
      when: ansible_architecture == "aarch64"
    - role: startcloud_secure
      when: ansible_architecture == "aarch64"
    - role: startcloud_clamav
      when: ansible_architecture == "aarch64"
    - role: startcloud_docker
      when: ansible_architecture == "aarch64"
    - role: startcloud_zfs
      when: ansible_architecture == "aarch64"
      vars:
        frequent_cron_rtn: 24
        hourly_cron_rtn: 24
        daily_cron_rtn: 31
        weekly_cron_rtn: 4
        monthly_cron_rtn: 3
    - role: startcloud_zfs_unlock_service
      when: ansible_architecture == "aarch64"
    - role: startcloud_vmware_horizon
      when: ansible_architecture == "aarch64"
      vars:
        horizon_archive: "VMware-Horizon-Client-Linux-2306-8.10.0-21964631.tar.gz"
        horizon_url: "https://download3.vmware.com/software/CART24FQ2_LIN_2306_TARBALL/{{ horizon_archive }}"
        tmp_dir: /tmp/VMWare-horizon
    - role: startcloud_motd
      when: ansible_architecture == "aarch64"
      vars:
        add_footer: false
        add_update: true
        remove_default_config: true
        restore_default_config: false
        sysadmins_email: support@prominic.net
        sysadmins_signature: "Prominic.NET Support Staff"
        content: |
          --------------------------------------------------------------------------
                              This system is managed by Prominic.NET
          --------------------------------------------------------------------------
                     ___                 _      _       _  ____________
                    / _ \_______  __ _  (_)__  (_)___  / |/ / __/_  __/
                   / ___/ __/ _ \/  ' \/ / _ \/ / __/ /    / _/  / /   
                  /_/  /_/  \___/_/_/_/_/_//_/_/\__(_)_/|_/___/ /_/    
          -------------------------------------------------------------------------- 
          WARNING: This machine is managed by external services. Changes may not 
                persist without a systems administrators intervention. For more 
                information see https://vagrant-zones.startcloud.com/changes
            
          Support: {{ sysadmins_signature }}
          Email: {{ sysadmins_email }} 
          Template Creation Date: {{ ansible_date_time.iso8601 }}
          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - role: startcloud_domain
      when: ansible_architecture == "aarch64"
    - role: startcloud_openfortivpn
      when: ansible_architecture == "aarch64"
      vars:
        openfortivpn_servers:
          -
            name: "Champaign Fortinet VPN"
            server: vpn-staff-cham-s1.prominic.world
            port: 8443
            user: GenericPiUser
            pass: GenericPassword
          -
            name: "Rantoul Fortinet VPN"
            server: vpn-staff-rant-s2.prominic.world
            port: 8443
            user: GenericPiUser
            pass: GenericPassword
    - role: startcloud_perf_stats
      when: ansible_architecture == "aarch64"
    - role: startcloud_x728_ups
      when: ansible_architecture == "aarch64"
    - role: startcloud_lcd
      when: ansible_architecture == "aarch64"
    - role: startcloud_nfc
      when: ansible_architecture == "aarch64"
    - role: sdkman_install
      when: ansible_architecture == "aarch64"
    - role: sdkman_java
      when: ansible_architecture == "aarch64"
    - role: prominic_system_health
      when: ansible_architecture == "aarch64"
      vars:
        system_health_password: $6$okio/lrYoqzaUlWl$IUCNpVMC6jkCKy7u15OeDxEahhY2QmDmmXnJTkSPja.tfO2QDNBh4BpDSe37.3VRaIS20aEGBAJVMRR4UNpfk1
        system_health_public_keys:
          - system_health.pub
        system_health_user: system_health
    - role: prominic_install_screen
      when: ansible_architecture == "aarch64"
    - role: prominic_config
      when: ansible_architecture == "aarch64"
      vars:
        provision_vars:
          ipaserver_domain: prominic.global
          ipaserver_realm: PROMINIC.GLOBAL
          ipaserver_forwarders: 199.103.7.51, 208.85.188.127, 208.85.189.20, 199.103.5.20
          ipaserver_setup_kra: yes
          ipaserver_setup_dns: yes
          ipaadmin_password: 'oGh8E8QC5N6Rpw'
          ipaadmin_principal: provisioning_user
          ipaclient_servers: auth-s1.prominic.global
          ipaclient_no_ntp: no
          ipaclient_principal: provisioning_user
          ipaclient_ntp_servers: ntp1.prominic.net, ntp2.prominic.net
          ipaclient_configure_firefox: true
          ipasssd_enable_dns_updates: yes
          ipaclient_force_join: yes
          fortinet_vpn_url: vpn-staff-cham-s1.prominic.world
          fortinet_vpn_port: 8443
    - role: prominic_theme
      when: ansible_architecture == "aarch64"
    - role: prominic_java_gbauth
      when: ansible_architecture == "aarch64"
    - role: startcloud_cleanup
      when: ansible_architecture == "aarch64"